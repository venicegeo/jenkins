#!/usr/bin/groovy

// This pipeline will delete all default PCF routes for an application in a space. 
// A default route is a route that is identical to the name of the application. 
// Default routes have been phased out, but the presence of them may cause errors in
// new pipelines with internal routes; as such, this can be used to clean up those
// default routes. 
//
// SPACE and DOMAIN parameters must be defined at the Jenkins job.
//
// All apps should be pushed with --no-route to prevent the default route from being used
// in the future.
node {
  def root = pwd()
  
  stage("Config") {
    // clone the configuration repository and copy the current configuration
    def configDir = "${root}/configuration"
    def configFile = "${root}/config.json"
    dir(configDir) {
      git url: "${env.CONFIGURATION_URL}", credentialsId: "${env.CONFIGURATION_CREDS}"
      sh "mv ${configDir}/${ENVIRONMENT}-config.json ${configFile}"
      deleteDir()
    }
    // read the current configuration
    def configJson = readJSON file: "${configFile}"
    for (param in configJson.credparams + configJson.jobparams) { 
      env."${param.name}" = (param.type == "booleanParam") ? "${param.defaultvalue}".toBoolean() : "${param.defaultvalue}"
    }
  }
  
  def pcfSpace = "${env.SPACE}"
  def pcfDomain = "${env.DOMAIN}"

  withEnv(["CF_HOME=.cf"]) {

    stage("Clean Default Routes") {
      withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: "${env.PCF_CREDS}", usernameVariable: "CFUSER", passwordVariable: "CFPASS"]]) {
        // Log into PCF
        sh """
          cf api ${env.PCF_API_ENDPOINT}
          cf auth ${CFUSER} ${CFPASS}
          cf target -o ${env.PCF_ORG} -s ${pcfSpace}
        """
        
        // Ensure routes are cleaned
        sh "cf delete-orphaned-routes -f"
        
        // Scan all routes
        def routes = sh(script: "cf routes", returnStdout: true)
        for (Object route : routes.trim().tokenize('\r')) {
          def routeName = sh(script: "echo \"${route}\" | awk '{print \$2}'", returnStdout: true).trim()
          def appName = sh(script: "echo \"${route}\" | awk '{print \$4}'", returnStdout: true).trim()
          // If the host and the route are the same name, then it is default. Remove.
          if (!routeName == appName) {
            sh "cf unmap-route ${appName} ${pcfDomain} --hostname ${routeName}"
          }
        }
      }
    }
  }
}
