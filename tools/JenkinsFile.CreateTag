#!/usr/bin/groovy

node {
  def root = pwd()

  stage("Config") {
    deleteDir()
    // clone the configuration repository and copy the current configuration
    def configDir = "${root}/configuration"
    def configFile = "${root}/config.json"
    dir(configDir) {
      git url: "${env.CONFIGURATION_URL}", credentialsId: "${env.CONFIGURATION_CREDS}"
      sh "mv ${configDir}/${ENVIRONMENT}-config.json ${configFile}"
      deleteDir()
    }
    // read the current configuration
    def configJson = readJSON file: "${configFile}"
    for (param in configJson.credparams + configJson.jobparams) { 
      env."${param.name}" = (param.type == "booleanParam") ? "${param.defaultvalue}".toBoolean() : "${param.defaultvalue}"
    }
  }
  
  def repos = ["venicegeo-conda-recipes","pzsvc-ndwi-py"]

	stage("Setup") {
		deleteDir()
        repos.each {
            sh "mkdir ${it}"
            dir("${it}") {
              git url: "https://github.com/venicegeo/${it}"
              sh """
                bash tag.sh ${env.RELEASE_NAME} || true
                git tag -a ${env.RELEASE_NAME} -m "${env.RELEASE_NAME} ${env.RELEASE_MESSAGE}"
                git add .
                git commit -m "Creating tag ${env.RELEASE_NAME}" --allow-empty
                git push origin ${env.RELEASE_NAME}
              """
              
            }
            sh "rm -rf ${it}"
        }
	}
}
